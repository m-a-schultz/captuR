% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R
\name{capture_info}
\alias{capture_info}
\title{Create a capture_info object}
\usage{
capture_info(
  inputs,
  outputs,
  version,
  object_name,
  timestamp,
  script_path,
  code_lines,
  dependencies,
  script_checksum,
  seed,
  is_stochastic,
  session,
  object_digest,
  git_info = NULL,
  tags = NULL,
  package_versions = NULL,
  warnings = NULL,
  digest_algorithm = "sha256"
)
}
\arguments{
\item{version}{captuR version string.}

\item{object_name}{Name of the object being saved.}

\item{timestamp}{Time when the object was saved.}

\item{script_path}{Path to the script that generated the object.}

\item{code_lines}{Character vector of code lines used to generate the object.}

\item{dependencies}{A list of `ScriptNodeInfo` objects (from CodeDepends).}

\item{script_checksum}{Digest checksum of the script file.}

\item{seed}{Any `set.seed()` calls found in the generating code.}

\item{is_stochastic}{Logical indicating whether stochastic code was detected}

\item{session}{The output of `sessionInfo()` at save time.}

\item{object_digest}{Digest hash of the object itself.}

\item{git_info}{Git metadata as a named list (optional).}

\item{tags}{Character vector of user-supplied tags (optional).}

\item{package_versions}{Named character vector of package versions used in dependencies.}

\item{warnings}{List of warning messages generated during capture.}

\item{digest_algorithm}{The digest algorithm used (e.g., "sha256").}
}
\value{
An object of class `capture_info`, suitable for attaching as metadata.

An object of class `capture_info`.
}
\description{
Constructs a structured metadata object describing the full context in which
an R object or environment was captured. This includes information about the
objectâ€™s name, digest, timestamp, script source, code history, dependencies,
session info, Git metadata, seed state, and other provenance details.
}
\details{
The `capture_info` object is attached as an attribute to captured R objects
or environments under the name `"capture"` and is used for auditing,
reproducibility, validation, and code regeneration.
}
\section{Structure}{

A `capture_info` object is a named list with the following components:
\describe{
  \item{inputs}{Character vector of objects that were inputs (read from) during generation.}
  \item{outputs}{Character vector of objects created or updated.}
  \item{capture_version}{Character string indicating captuR version.}
  \item{object_name}{The name of the primary object (or comma-separated names for multiple).}
  \item{timestamp}{POSIXct timestamp indicating when the capture was performed.}
  \item{script_path}{Path to the R script that generated the object (if available).}
  \item{code_lines}{Character vector of R code used to generate the object(s).}
  \item{dependencies}{List of `ScriptNodeInfo` objects from `CodeDepends` that describe code structure.}
  \item{script_checksum}{Digest hash of the script file at capture time.}
  \item{seed}{The nearest `set.seed()` call found before object creation, if present.}
  \item{session}{Optional `sessionInfo()` result if session info was captured.}
  \item{object_digest}{Named list of digest hashes for each object, or a single string for one object.}
  \item{git_info}{Named list with Git commit, author, message, and date (if available).}
  \item{tags}{Optional character vector of user-supplied tags.}
  \item{package_versions}{Named character vector of package versions used in code.}
  \item{warnings}{List of warning messages generated during capture (if any).}
  \item{digest_algorithm}{Digest algorithm used (e.g., `"sha256"`).}
}
}

\seealso{
[get_capture()], [capture_env()], [capture_save()], [capture_block()]
}
